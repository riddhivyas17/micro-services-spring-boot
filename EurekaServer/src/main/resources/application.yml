---
spring:
  profiles: default
  
server:
  port: 8761
  
eureka:
  instance:
    hostname: localhost
  client:
    registerWithEureka: false
    fetchRegistry: false
    serviceUrl:
      defaultZone: http://${eureka.instance.hostname}:${server.port}/eureka/
  
# primary, secondary, and tertiary illustrate running 3 intercommunicating instances.  This example has them running
# side-by-side on localhost -- which is unrealistic in production -- but does illustrate how multiple instances collaborate.
# Run by opening 3 separate command prompts:
# java -jar -Dspring.profiles.active=primary lab-4-eureka-server-solution-0.0.1-SNAPSHOT.jar
# java -jar -Dspring.profiles.active=secondary lab-4-eureka-server-solution-0.0.1-SNAPSHOT.jar
# java -jar -Dspring.profiles.active=tertiary lab-4-eureka-server-solution-0.0.1-SNAPSHOT.jar

---
spring:
  profiles: primary
server:
  port: 8071
eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8072/eureka/,http://localhost:8073/eureka/
      

---
spring:
  profiles: secondary
server:
  port: 8072
eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8073/eureka/,http://localhost:8071/eureka/

---
spring:
  profiles: tertiary
server:
  port: 8073
eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8071/eureka/,http://localhost:8072/eureka/
